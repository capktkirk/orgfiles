#+TITLE: Summer Projection
#+OPTIONS: author: Kyle Kirk

This documentation is for the Go Summer Learning Project.

My intent is to document and learn go over the course of a summer to the point
where I can use Golang, Flutter and possibly a Rust backend to create an interactive
IDE "Code Teaching" program modeled after my summer of code learning.
* Go Tutorials/Reference
** [[https://learnxinyminutes.com/docs/go/][ Learn X in Y minutes tutorial Go]]
** General Golang resources : https://github.com/golang/go/wiki/Learn
* Spacemacs Reference 
** Docs : 
   - https://develop.spacemacs.org/layers/+emacs/org/README.html
     - insert a link : SPC m i L
   - Jack of Some - https://www.youtube.com/watch?v=S4f-GUxu3CY
   - Thoughtbot - pure Emacs - https://www.youtube.com/watch?v=SzA2YODtgK4&t=121s
* Learning Emacs Schedule
** General To Do
*** TODO Spacemacs Exploration [66%]   
   - [X] TODO Install Spacemacs
   - [ ] TODO Customize Spacemacs
   - [X] TODO Begin note taking and org-mode exploration
*** TODO create schedule 
*** TODO Figure out Literate Programming in org-mode
** Create list of tools and resources 
* Code Language todo list. 
*** DONE pick language
    CLOSED: [2020-05-21 Thu 02:23]
    - [X] Golang
    - [ ] Julia
    - [ ] Clojure


* Golang Learning Schedule
** Week 1 [33%] [3/9]
   DEADLINE: <2020-05-23 Sat 23:59>
   - [X] Golang Installation
   - [X] Golang working layer on Spacemacs (Possibly?)
   - [X] Go 'Hello World' : [[file:go/hw.go][here]] 
   - [-] Fundamentals of Programming [25%] [1/4]
     - [ ] Variables
       - assign first (ex : `var x int` or `var x string')
     - [X] Compilation/Running
       - [X] go run (runs script from file compiles at time(?) and if you want to make it an executable, go build)
       - [X] *Discovery* : Build tags can be put in the file at the top in a line comment // +build and you can essentially execute all the
                           build tags by running `go build -tags="tag1, tag2"` sounds useful for having multiple builds with options?
       - [X] Multiple files for one? Includes similar to C++? (Answer : Yes, just include them on the line or in a package together.
       - [X] *Discovery* : appending _test to the end of the file creates automatic testing structure that you can run with go test.
       - [X] chmod? Permissions needed to run script afterwards? (Answer : None, it's done automatically.)
     - [ ] Imports : Similar to C/C++/Python : but, you can include multiple lines. Ex :
#+NAME: IMPORT_EXAMPLE
#+BEGIN_SRC<go>
import "fmt"
#+END_SRC
OR
#+BEGIN_SRC<go>
import (
"fmt"
"io/ioutil"
"os"
)
#+END_SRC
You can import multiple things at once, in a single import line.
     - [ ] Logic (Loops, Ifs)
   ** Week 2 [33%] [3/9]
      DEADLINE: <2020-05-30 Sat 23:59>
   *** TODO Golang Complexity
       - State "TODO"       from              [2020-05-21 Thu 15:14]
       - [ ] Data Structures
       - [ ] Classes
       - [ ] Control Flow
       - [ ] I/O
       - [ ] File Reading/Writing
   *** TODO Write a basic file reading/writing program
   ** Week 3 [33%] [3/9]
   DEADLINE: <2020-06-06 Sat 23:59>
*** TODO Continue working on programs, find multiple projects in previously worked languages and make in Go.
    - State "TODO"       from              [2020-05-21 Thu 21:11]
** Week 4 [100%] [0/0]
   DEADLINE: <2020-06-13 Sat 23:59>
** Week 5 [100%] [0/0]
   DEADLINE: <2020-06-20 Sat 23:59>
** Week 6 [100%] [0/0]
   DEADLINE: <2020-06-27 Sat 23:59>
** Week 7 [100%] [0/0]
   DEADLINE: <2020-07-04 Sat 23:59>
** Week 8 [100%] [0/0]
   DEADLINE: <2020-07-11 Sat 23:59>
** Week 9 [100%] [0/0]
   DEADLINE: <2020-07-18 Sat 23:59>
** Week 10 [100%] [0/0]
   DEADLINE: <2020-07-25 Sat 23:59>
** Week 11 [100%] [0/0]
   DEADLINE: <2020-08-01 Sat 23:59>
** Week 12 [100%] [0/0]
   DEADLINE: <2020-08-08 Sat 23:59>
